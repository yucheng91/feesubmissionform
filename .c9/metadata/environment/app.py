{"filter":false,"title":"app.py","tooltip":"/app.py","undoManager":{"mark":70,"position":70,"stack":[[{"start":{"row":0,"column":0},"end":{"row":725,"column":23},"action":"insert","lines":["","from flask import Flask, render_template, request, redirect, url_for","","import os","","import pymysql","","","","connection = pymysql.connect(","","    host='localhost', # IP address of the database; localhost means \"the local machine\"","","    user=\"admin\",  #the mysql user","","    password=\"password\", #the password for the user","","    database=\"Chinook\" #the name of database we want to use","",")","","","","app = Flask(__name__)","","","","","","@app.route('/', methods=['GET'])","","def index():",""," ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    search_terms = request.args.get('search_terms')","","    if search_terms is None:","","        search_terms = ''","","    # sql = \"SELECT * FROM Employee WHERE FirstName LIKE '%{}%'\".format(search_terms)","","    sql = \"SELECT * FROM Employee WHERE FirstName LIKE %s\"","","    cursor.execute(sql, ['%' + search_terms + '%'])","","    # store results in a list","","    results = []","","    for r in cursor:","","        results.append(r)","","   ","","    return render_template('index.html', ","","    data=results)","","    ","","@app.route('/edit/employee/<employeeId>')","","def edit_employee(employeeId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Employee WHERE EmployeeId = {}\".format(employeeId)","","    cursor.execute(sql)","","    employee = cursor.fetchone()","","    ","","    return render_template('edit_employee.html', e=employee)","","    ","","@app.route('/edit/employee/<employeeId>', methods=['POST'])","","def update_employee(employeeId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    first_name = request.form.get('first_name')","","    last_name = request.form.get('last_name')","","    title = request.form.get('title')","","    sql = \"UPDATE Employee SET FirstName = '{}', LastName='{}', Title='{}' WHERE EmployeeId = {}\".format(","","        first_name, last_name, title, employeeId","","    )","","    cursor.execute(sql)","","    connection.commit()","","    return redirect(url_for('index'))","","    ","","","","@app.route('/artist')","","def artists():","","     cursor = connection.cursor(pymysql.cursors.DictCursor)","","     sql = \"SELECT * FROM Artist\"","","     cursor.execute(sql)","","     results = []","","     for r in cursor:","","         results.append(r)","","     print(results)","","     return render_template('artist.html', data=results)","","     ","","@app.route('/album/<artistId>')","","def albums(artistId):","","     cursor = connection.cursor(pymysql.cursors.DictCursor)","","     ","","     sql = \"SELECT * FROM Artist Where ArtistId = {}\".format(artistId)","","     cursor.execute(sql)","","     artist = cursor.fetchone()","","     ","","     sql = \"SELECT * FROM Album WHERE ArtistId = {}\".format(artistId)","","     cursor.execute(sql)","","     results = []","","     for r in cursor:","","         results.append(r)","","     print(results)","","     return render_template('album.html', data=results, artist=artist)","","","","","","@app.route('/music/track/<albumId>')","","def track(albumId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Track WHERE AlbumId = {}\".format(albumId)","","    print (sql)","","    # cursor is NOT the results; cursor points to the result","","    cursor.execute(sql)","","    ","","    results = []","","    for r in cursor:","","        results.append(r)","","        ","","    return render_template('track.html', data=results)","","","","@app.route('/new/artist/', methods=['GET'])    ","","def new_artist():","","    return render_template('new_artist.html')","","    ","","@app.route('/new/artist/', methods=['POST'])","","def create_new_artist():","","    artist_name = request.form.get('artist_name')","","    ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    ","","    cursor.execute(\"SELECT MAX(ArtistId) FROM Artist\")","","    next_id = cursor.fetchone()['MAX(ArtistId)'] ","","    next_id = next_id + 1","","","","    ","","    sql = \"INSERT INTO Artist (ArtistId, Name) VALUES ({}, '{}')\".format(next_id, artist_name)","","    cursor.execute(sql)","","","","    connection.commit()","","    ","","    return \"Artist has been created!\"","","","","","","@app.route('/edit/artist/<artistId>')","","def edit_artist(artistId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(\"SELECT * FROM Artist WHERE ArtistId = {}\".format(artistId))","","    artist = cursor.fetchone()","","    return render_template('edit_artist.html', artist=artist)","","","","@app.route('/edit/artist/<artistId>', methods=['POST'])","","def update_artist(artistId):","","    ","","    artist_name = request.form.get('artist_name')","","    ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(\"UPDATE Artist SET Name = '{}' WHERE ArtistId = {}\".format(artist_name, artistId))","","    ","","    connection.commit()","","    return redirect(url_for('artists'))","","","","@app.route('/new/album/')    ","","@app.route('/new/album/<artistId>')","","def new_album(artistId=0):","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Artist\"","","    cursor.execute(sql)","","    artists = []","","    for r in cursor:","","        artists.append({","","            'ArtistId' : r['ArtistId'],","","            'Name' : r['Name']","","        })","","    ","","    return render_template('new_album.html', data=artists,artist_id = int(artistId))","","    ","","@app.route('/new/album/', methods=['POST'])","","@app.route('/new/album/<artistId>', methods=['POST'])","","def create_new_album(artistId=0):","","    ","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(\"SELECT MAX(AlbumId) FROM Album\")","","    next_id = cursor.fetchone()['MAX(AlbumId)']","","    next_id += 1","","    ","","    album_name = request.form.get('album_name')","","    # artist variable will hold the artist id","","    artist = request.form.get('artist')","","    ","","    sql = \"INSERT INTO Album (AlbumId, Title, ArtistId) VALUES({}, '{}', {})\".format(next_id, album_name, artist)","","    ","","    cursor.execute(sql)   ","","","","    connection.commit()","","    return \"Album created successfully!\"","","    ","","@app.route('/edit/album/<album_id>')","","def edit_album(album_id):","","    sql = \"SELECT * FROM Album WHERE AlbumId = {}\".format(album_id)","","    ","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(sql)","","    album = cursor.fetchone()","","  ","","    # get all the artists","","    sql = \"SELECT * FROM Artist\"","","    cursor.execute(sql)","","    artists = []","","    for r in cursor:","","        artists.append({","","            'ArtistId' : r['ArtistId'],","","            'Name' : r['Name']","","        })","","    ","","    return render_template('edit_album.html', album=album, artists=artists)","","    ","","","","\"\"\"","","Alternatively:","","@app.route('/new/artist/', methods=['GET', 'POST'])    ","","def new_artist():","","    if (request.method == \"GET\"):","","     return render_template('new_artist.html')","","    else:","","     return \"form submitted\"","","\"\"\"","","","","\"\"\"","","1. We need a route to show the form for adding a new one","","2. We need a route to process the form for adding a new one","","3. We need a route to show the form for editing the existing data","","4. We need a route to process the form for editing the existing data","","5. We need a route to show all the records for a table (Read in the CRUD)","","6. We need a route to delete a record from a table","","\"\"\"","","@app.route('/mediatype')","","def show_mediatype():","","    # 1. we need a database cursor","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","   ","","    # 2. We need a SQL statement","","    sql = \"SELECT * FROM MediaType WHERE deleted=0\"","","    ","","    # 3. We have a cursor, we have a statement","","    cursor.execute(sql)","","    ","","    #4. We need to show the results","","    # If there is only one result: we can use cursor.fetchone()","","    results = []","","    for r in cursor:","","        results.append(r)","","        ","","    #5. pass the results to a template","","    return render_template('mediatype.html', data=results)",""," ","","","","@app.route('/new/mediatype', methods=['GET'])","","def new_mediatype():","","    #1. show the form","","    return render_template('new_mediatype.html', mediatype={})","","    ","","@app.route('/new/mediatype', methods=['POST'])","","def create_new_mediatype():","","    #0. Create SQL cursor","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    ","","    #1. retrieve whatever data the user typed into the form","","    media_type_name = request.form.get('media_type_name')","","    ","","    #OPTIONAL ","","    #If the database didn't use auto increment for the primary key, then","","    #we have to calculate the next id ourselves","","    ","","    sql = \"SELECT MAX(MediaTypeId) AS'max_id' FROM MediaType\";","","    cursor.execute(sql)","","    current_max_id = cursor.fetchone()['max_id']","","    next_id = current_max_id + 1","","    ","","    #2. Create the insert statement","","    sql = \"INSERT INTO MediaType (MediaTypeId, Name) VALUES (%s, %s)\"","","    ","","    #3. Excute the query","","    cursor.execute(sql, [next_id, media_type_name])","","    ","","    #4. Commit to the database to make the transaction permanent.","","    connection.commit()","","    ","","    #5. redirect to the listing page","","    return redirect(url_for('show_mediatype'))","","    ","","@app.route('/edit/mediatype/<mediaTypeID>')","","def edit_media_type(mediaTypeID):","","    #1 Retrieve the existing information for the media type we have selected","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    ","","    sql = \"SELECT * FROM MediaType WHERE MediaTypeId = %s\"","","    cursor.execute(sql, [mediaTypeID])","","    mediatype = cursor.fetchone()","","    ","","    #1 Show the form","","","","    ","","    return render_template('edit_mediatype.html', mediatype=mediatype)","","","","@app.route('/delete/confirm/mediatype/<mediaTypeID>')","","def confirm_delete_mediatype(mediaTypeID):","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM MediaType where MediaTypeId = %s\"","","    cursor.execute(sql, [mediaTypeID])","","    mediatype = cursor.fetchone()","","    ","","    return render_template('confirm_delete_mediatype.html', mediatype=mediatype)","","    ","","@app.route('/delete/mediatype/<mediaTypeID>', methods=['POST'])","","def delete_mediatype(mediaTypeID):","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    # sql = \"DELETE FROM MediaType WHERE MediaTypeId = %s\"","","    sql = \"UPDATE MediaType SET deleted = 1 WHERE MediaTypeId = %s\"","","    cursor.execute(sql, [mediaTypeID])","","    connection.commit()","","    return redirect(url_for('show_mediatype'))","","    ","","@app.route('/new/track')","","def create_new_track():","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Genre\"","","    # fetch all genres and store it in a list","","    cursor.execute(sql)","","    genres = []","","    for r in cursor:","","        genres.append({","","            'GenreId' : r['GenreId'],","","            'Name': r['Name']","","        })","","        ","","    # fetch all media type and store it in a list","","    sql = \"SELECT * FROM Album\"","","    cursor.execute(sql)","","    albums = []","","    for r in cursor:","","        albums.append({","","            'AlbumId':r['AlbumId'],","","            'Name': r['Title']","","        })","","    ","","    # fetch all media type and store it in a list","","    sql = \"SELECT * FROM MediaType\"","","    cursor.execute(sql)","","    mediatypes = []","","    for r in cursor:","","        mediatypes.append({","","            'MediaTypeId':r['MediaTypeId'],","","            'Name': r['Name']","","        })","","    ","","    return render_template('new_track.html', genres=genres, albums=albums, mediatypes=mediatypes)","","    ","","@app.route('/new/track', methods=['POST'])","","def process_create_track():","","    track_name = request.form.get('track_name')","","    album = request.form.get('album')","","    genre = request.form.get('genre')","","    media_type = request.form.get('media_type')","","    ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    ","","    ","","    sql = \"SELECT MAX(TrackId) AS'max_id' FROM Track\";","","    cursor.execute(sql)","","    current_max_id = cursor.fetchone()['max_id']","","    next_id = current_max_id + 1","","    ","","    sql = \"\"\"","","        INSERT INTO Track (TrackId, Name, AlbumId, MediaTypeId, GenreId, Composer, Milliseconds, Bytes, UnitPrice)","","        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)","","        \"\"\"","","        ","","    cursor.execute(sql, [next_id, track_name, album, media_type, genre, \"N/A\", 0, 0, 0])","","    connection.commit()","","    return \"Added\"","","","","# \"magic code\" -- boilerplate","","if __name__ == '__main__':","","    app.run(host=os.environ.get('IP'),","","            port=int(os.environ.get('PORT')),","","            debug=True)"],"id":1}],[{"start":{"row":62,"column":0},"end":{"row":714,"column":0},"action":"remove","lines":["","    ","","@app.route('/edit/employee/<employeeId>')","","def edit_employee(employeeId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Employee WHERE EmployeeId = {}\".format(employeeId)","","    cursor.execute(sql)","","    employee = cursor.fetchone()","","    ","","    return render_template('edit_employee.html', e=employee)","","    ","","@app.route('/edit/employee/<employeeId>', methods=['POST'])","","def update_employee(employeeId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    first_name = request.form.get('first_name')","","    last_name = request.form.get('last_name')","","    title = request.form.get('title')","","    sql = \"UPDATE Employee SET FirstName = '{}', LastName='{}', Title='{}' WHERE EmployeeId = {}\".format(","","        first_name, last_name, title, employeeId","","    )","","    cursor.execute(sql)","","    connection.commit()","","    return redirect(url_for('index'))","","    ","","","","@app.route('/artist')","","def artists():","","     cursor = connection.cursor(pymysql.cursors.DictCursor)","","     sql = \"SELECT * FROM Artist\"","","     cursor.execute(sql)","","     results = []","","     for r in cursor:","","         results.append(r)","","     print(results)","","     return render_template('artist.html', data=results)","","     ","","@app.route('/album/<artistId>')","","def albums(artistId):","","     cursor = connection.cursor(pymysql.cursors.DictCursor)","","     ","","     sql = \"SELECT * FROM Artist Where ArtistId = {}\".format(artistId)","","     cursor.execute(sql)","","     artist = cursor.fetchone()","","     ","","     sql = \"SELECT * FROM Album WHERE ArtistId = {}\".format(artistId)","","     cursor.execute(sql)","","     results = []","","     for r in cursor:","","         results.append(r)","","     print(results)","","     return render_template('album.html', data=results, artist=artist)","","","","","","@app.route('/music/track/<albumId>')","","def track(albumId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Track WHERE AlbumId = {}\".format(albumId)","","    print (sql)","","    # cursor is NOT the results; cursor points to the result","","    cursor.execute(sql)","","    ","","    results = []","","    for r in cursor:","","        results.append(r)","","        ","","    return render_template('track.html', data=results)","","","","@app.route('/new/artist/', methods=['GET'])    ","","def new_artist():","","    return render_template('new_artist.html')","","    ","","@app.route('/new/artist/', methods=['POST'])","","def create_new_artist():","","    artist_name = request.form.get('artist_name')","","    ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    ","","    cursor.execute(\"SELECT MAX(ArtistId) FROM Artist\")","","    next_id = cursor.fetchone()['MAX(ArtistId)'] ","","    next_id = next_id + 1","","","","    ","","    sql = \"INSERT INTO Artist (ArtistId, Name) VALUES ({}, '{}')\".format(next_id, artist_name)","","    cursor.execute(sql)","","","","    connection.commit()","","    ","","    return \"Artist has been created!\"","","","","","","@app.route('/edit/artist/<artistId>')","","def edit_artist(artistId):","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(\"SELECT * FROM Artist WHERE ArtistId = {}\".format(artistId))","","    artist = cursor.fetchone()","","    return render_template('edit_artist.html', artist=artist)","","","","@app.route('/edit/artist/<artistId>', methods=['POST'])","","def update_artist(artistId):","","    ","","    artist_name = request.form.get('artist_name')","","    ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(\"UPDATE Artist SET Name = '{}' WHERE ArtistId = {}\".format(artist_name, artistId))","","    ","","    connection.commit()","","    return redirect(url_for('artists'))","","","","@app.route('/new/album/')    ","","@app.route('/new/album/<artistId>')","","def new_album(artistId=0):","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Artist\"","","    cursor.execute(sql)","","    artists = []","","    for r in cursor:","","        artists.append({","","            'ArtistId' : r['ArtistId'],","","            'Name' : r['Name']","","        })","","    ","","    return render_template('new_album.html', data=artists,artist_id = int(artistId))","","    ","","@app.route('/new/album/', methods=['POST'])","","@app.route('/new/album/<artistId>', methods=['POST'])","","def create_new_album(artistId=0):","","    ","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(\"SELECT MAX(AlbumId) FROM Album\")","","    next_id = cursor.fetchone()['MAX(AlbumId)']","","    next_id += 1","","    ","","    album_name = request.form.get('album_name')","","    # artist variable will hold the artist id","","    artist = request.form.get('artist')","","    ","","    sql = \"INSERT INTO Album (AlbumId, Title, ArtistId) VALUES({}, '{}', {})\".format(next_id, album_name, artist)","","    ","","    cursor.execute(sql)   ","","","","    connection.commit()","","    return \"Album created successfully!\"","","    ","","@app.route('/edit/album/<album_id>')","","def edit_album(album_id):","","    sql = \"SELECT * FROM Album WHERE AlbumId = {}\".format(album_id)","","    ","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    cursor.execute(sql)","","    album = cursor.fetchone()","","  ","","    # get all the artists","","    sql = \"SELECT * FROM Artist\"","","    cursor.execute(sql)","","    artists = []","","    for r in cursor:","","        artists.append({","","            'ArtistId' : r['ArtistId'],","","            'Name' : r['Name']","","        })","","    ","","    return render_template('edit_album.html', album=album, artists=artists)","","    ","","","","\"\"\"","","Alternatively:","","@app.route('/new/artist/', methods=['GET', 'POST'])    ","","def new_artist():","","    if (request.method == \"GET\"):","","     return render_template('new_artist.html')","","    else:","","     return \"form submitted\"","","\"\"\"","","","","\"\"\"","","1. We need a route to show the form for adding a new one","","2. We need a route to process the form for adding a new one","","3. We need a route to show the form for editing the existing data","","4. We need a route to process the form for editing the existing data","","5. We need a route to show all the records for a table (Read in the CRUD)","","6. We need a route to delete a record from a table","","\"\"\"","","@app.route('/mediatype')","","def show_mediatype():","","    # 1. we need a database cursor","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","   ","","    # 2. We need a SQL statement","","    sql = \"SELECT * FROM MediaType WHERE deleted=0\"","","    ","","    # 3. We have a cursor, we have a statement","","    cursor.execute(sql)","","    ","","    #4. We need to show the results","","    # If there is only one result: we can use cursor.fetchone()","","    results = []","","    for r in cursor:","","        results.append(r)","","        ","","    #5. pass the results to a template","","    return render_template('mediatype.html', data=results)",""," ","","","","@app.route('/new/mediatype', methods=['GET'])","","def new_mediatype():","","    #1. show the form","","    return render_template('new_mediatype.html', mediatype={})","","    ","","@app.route('/new/mediatype', methods=['POST'])","","def create_new_mediatype():","","    #0. Create SQL cursor","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    ","","    #1. retrieve whatever data the user typed into the form","","    media_type_name = request.form.get('media_type_name')","","    ","","    #OPTIONAL ","","    #If the database didn't use auto increment for the primary key, then","","    #we have to calculate the next id ourselves","","    ","","    sql = \"SELECT MAX(MediaTypeId) AS'max_id' FROM MediaType\";","","    cursor.execute(sql)","","    current_max_id = cursor.fetchone()['max_id']","","    next_id = current_max_id + 1","","    ","","    #2. Create the insert statement","","    sql = \"INSERT INTO MediaType (MediaTypeId, Name) VALUES (%s, %s)\"","","    ","","    #3. Excute the query","","    cursor.execute(sql, [next_id, media_type_name])","","    ","","    #4. Commit to the database to make the transaction permanent.","","    connection.commit()","","    ","","    #5. redirect to the listing page","","    return redirect(url_for('show_mediatype'))","","    ","","@app.route('/edit/mediatype/<mediaTypeID>')","","def edit_media_type(mediaTypeID):","","    #1 Retrieve the existing information for the media type we have selected","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    ","","    sql = \"SELECT * FROM MediaType WHERE MediaTypeId = %s\"","","    cursor.execute(sql, [mediaTypeID])","","    mediatype = cursor.fetchone()","","    ","","    #1 Show the form","","","","    ","","    return render_template('edit_mediatype.html', mediatype=mediatype)","","","","@app.route('/delete/confirm/mediatype/<mediaTypeID>')","","def confirm_delete_mediatype(mediaTypeID):","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM MediaType where MediaTypeId = %s\"","","    cursor.execute(sql, [mediaTypeID])","","    mediatype = cursor.fetchone()","","    ","","    return render_template('confirm_delete_mediatype.html', mediatype=mediatype)","","    ","","@app.route('/delete/mediatype/<mediaTypeID>', methods=['POST'])","","def delete_mediatype(mediaTypeID):","","    cursor =  connection.cursor(pymysql.cursors.DictCursor)","","    # sql = \"DELETE FROM MediaType WHERE MediaTypeId = %s\"","","    sql = \"UPDATE MediaType SET deleted = 1 WHERE MediaTypeId = %s\"","","    cursor.execute(sql, [mediaTypeID])","","    connection.commit()","","    return redirect(url_for('show_mediatype'))","","    ","","@app.route('/new/track')","","def create_new_track():","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"SELECT * FROM Genre\"","","    # fetch all genres and store it in a list","","    cursor.execute(sql)","","    genres = []","","    for r in cursor:","","        genres.append({","","            'GenreId' : r['GenreId'],","","            'Name': r['Name']","","        })","","        ","","    # fetch all media type and store it in a list","","    sql = \"SELECT * FROM Album\"","","    cursor.execute(sql)","","    albums = []","","    for r in cursor:","","        albums.append({","","            'AlbumId':r['AlbumId'],","","            'Name': r['Title']","","        })","","    ","","    # fetch all media type and store it in a list","","    sql = \"SELECT * FROM MediaType\"","","    cursor.execute(sql)","","    mediatypes = []","","    for r in cursor:","","        mediatypes.append({","","            'MediaTypeId':r['MediaTypeId'],","","            'Name': r['Name']","","        })","","    ","","    return render_template('new_track.html', genres=genres, albums=albums, mediatypes=mediatypes)","","    ","","@app.route('/new/track', methods=['POST'])","","def process_create_track():","","    track_name = request.form.get('track_name')","","    album = request.form.get('album')","","    genre = request.form.get('genre')","","    media_type = request.form.get('media_type')","","    ","","    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    ","","    ","","    sql = \"SELECT MAX(TrackId) AS'max_id' FROM Track\";","","    cursor.execute(sql)","","    current_max_id = cursor.fetchone()['max_id']","","    next_id = current_max_id + 1","","    ","","    sql = \"\"\"","","        INSERT INTO Track (TrackId, Name, AlbumId, MediaTypeId, GenreId, Composer, Milliseconds, Bytes, UnitPrice)","","        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)","","        \"\"\"","","        ","","    cursor.execute(sql, [next_id, track_name, album, media_type, genre, \"N/A\", 0, 0, 0])","","    connection.commit()","","    return \"Added\"",""],"id":2},{"start":{"row":61,"column":17},"end":{"row":62,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":64,"column":29},"end":{"row":65,"column":0},"action":"remove","lines":["",""],"id":3}],[{"start":{"row":65,"column":26},"end":{"row":66,"column":0},"action":"remove","lines":["",""],"id":4}],[{"start":{"row":66,"column":38},"end":{"row":67,"column":0},"action":"remove","lines":["",""],"id":5}],[{"start":{"row":67,"column":45},"end":{"row":68,"column":0},"action":"remove","lines":["",""],"id":6}],[{"start":{"row":59,"column":41},"end":{"row":60,"column":0},"action":"remove","lines":["",""],"id":7}],[{"start":{"row":57,"column":3},"end":{"row":58,"column":0},"action":"remove","lines":["",""],"id":8},{"start":{"row":57,"column":2},"end":{"row":57,"column":3},"action":"remove","lines":[" "]},{"start":{"row":57,"column":1},"end":{"row":57,"column":2},"action":"remove","lines":[" "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":1},"action":"remove","lines":[" "]},{"start":{"row":56,"column":0},"end":{"row":57,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":53,"column":20},"end":{"row":54,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":51,"column":16},"end":{"row":52,"column":0},"action":"remove","lines":["",""],"id":10}],[{"start":{"row":49,"column":29},"end":{"row":50,"column":0},"action":"remove","lines":["",""],"id":11}],[{"start":{"row":47,"column":51},"end":{"row":48,"column":0},"action":"remove","lines":["",""],"id":12}],[{"start":{"row":47,"column":51},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":13},{"start":{"row":48,"column":0},"end":{"row":48,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":39,"column":28},"end":{"row":40,"column":0},"action":"remove","lines":["",""],"id":14}],[{"start":{"row":37,"column":51},"end":{"row":38,"column":0},"action":"remove","lines":["",""],"id":15}],[{"start":{"row":37,"column":51},"end":{"row":38,"column":0},"action":"insert","lines":["",""],"id":16},{"start":{"row":38,"column":0},"end":{"row":38,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":35,"column":58},"end":{"row":36,"column":0},"action":"remove","lines":["",""],"id":17}],[{"start":{"row":33,"column":1},"end":{"row":34,"column":0},"action":"remove","lines":["",""],"id":18},{"start":{"row":33,"column":0},"end":{"row":33,"column":1},"action":"remove","lines":[" "]},{"start":{"row":32,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["",""]},{"start":{"row":31,"column":12},"end":{"row":32,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":31,"column":12},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"remove","lines":["    "],"id":20},{"start":{"row":31,"column":12},"end":{"row":32,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"remove","lines":["",""],"id":21},{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"remove","lines":["",""]},{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"remove","lines":["",""]},{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":22},{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":17,"column":59},"end":{"row":18,"column":0},"action":"remove","lines":["",""],"id":23}],[{"start":{"row":15,"column":51},"end":{"row":16,"column":0},"action":"remove","lines":["",""],"id":24}],[{"start":{"row":13,"column":34},"end":{"row":14,"column":0},"action":"remove","lines":["",""],"id":25}],[{"start":{"row":11,"column":87},"end":{"row":12,"column":0},"action":"remove","lines":["",""],"id":26}],[{"start":{"row":9,"column":29},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":27}],[{"start":{"row":3,"column":9},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":28}],[{"start":{"row":1,"column":68},"end":{"row":2,"column":0},"action":"remove","lines":["",""],"id":29}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""],"id":30},{"start":{"row":3,"column":14},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":31}],[{"start":{"row":8,"column":14},"end":{"row":8,"column":21},"action":"remove","lines":["Chinook"],"id":32},{"start":{"row":8,"column":14},"end":{"row":8,"column":15},"action":"insert","lines":["f"]},{"start":{"row":8,"column":15},"end":{"row":8,"column":16},"action":"insert","lines":["e"]},{"start":{"row":8,"column":16},"end":{"row":8,"column":17},"action":"insert","lines":["e"]},{"start":{"row":8,"column":17},"end":{"row":8,"column":18},"action":"insert","lines":["_"]}],[{"start":{"row":8,"column":18},"end":{"row":8,"column":19},"action":"insert","lines":["s"],"id":33},{"start":{"row":8,"column":19},"end":{"row":8,"column":20},"action":"insert","lines":["u"]},{"start":{"row":8,"column":20},"end":{"row":8,"column":21},"action":"insert","lines":["b"]},{"start":{"row":8,"column":21},"end":{"row":8,"column":22},"action":"insert","lines":["m"]},{"start":{"row":8,"column":22},"end":{"row":8,"column":23},"action":"insert","lines":["i"]},{"start":{"row":8,"column":23},"end":{"row":8,"column":24},"action":"insert","lines":["s"]},{"start":{"row":8,"column":24},"end":{"row":8,"column":25},"action":"insert","lines":["s"]},{"start":{"row":8,"column":25},"end":{"row":8,"column":26},"action":"insert","lines":["i"]},{"start":{"row":8,"column":26},"end":{"row":8,"column":27},"action":"insert","lines":["o"]},{"start":{"row":8,"column":27},"end":{"row":8,"column":28},"action":"insert","lines":["n"]}],[{"start":{"row":5,"column":21},"end":{"row":5,"column":87},"action":"remove","lines":[" # IP address of the database; localhost means \"the local machine\""],"id":34}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":34},"action":"remove","lines":["#the mysql user"],"id":35},{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"remove","lines":[" "]}],[{"start":{"row":7,"column":25},"end":{"row":7,"column":51},"action":"remove","lines":["#the password for the user"],"id":36}],[{"start":{"row":8,"column":29},"end":{"row":8,"column":66},"action":"remove","lines":[" #the name of database we want to use"],"id":37}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":85},"action":"remove","lines":["    # sql = \"SELECT * FROM Employee WHERE FirstName LIKE '%{}%'\".format(search_terms)"],"id":38},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":33,"column":17},"end":{"row":34,"column":0},"action":"remove","lines":["",""],"id":39}],[{"start":{"row":32,"column":39},"end":{"row":33,"column":16},"action":"remove","lines":[", ","    data=results"],"id":40}],[{"start":{"row":27,"column":0},"end":{"row":27,"column":29},"action":"remove","lines":["    # store results in a list"],"id":41},{"start":{"row":26,"column":4},"end":{"row":27,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":25,"column":25},"end":{"row":25,"column":48},"action":"remove","lines":["'%' + search_terms + '%"],"id":42}],[{"start":{"row":23,"column":10},"end":{"row":23,"column":58},"action":"remove","lines":["\"SELECT * FROM Employee WHERE FirstName LIKE %s\""],"id":43}],[{"start":{"row":25,"column":25},"end":{"row":25,"column":26},"action":"remove","lines":["'"],"id":44}],[{"start":{"row":18,"column":0},"end":{"row":20,"column":25},"action":"remove","lines":["    ","    if search_terms is None:","        search_terms = ''"],"id":45}],[{"start":{"row":17,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["    search_terms = request.args.get('search_terms')","","",""],"id":46}],[{"start":{"row":18,"column":10},"end":{"row":18,"column":12},"action":"insert","lines":["\"\""],"id":47}],[{"start":{"row":16,"column":0},"end":{"row":24,"column":25},"action":"remove","lines":["    cursor = connection.cursor(pymysql.cursors.DictCursor)","","    sql = \"\"","","    cursor.execute(sql, [])","    ","    results = []","    for r in cursor:","        results.append(r)"],"id":48}],[{"start":{"row":15,"column":12},"end":{"row":16,"column":0},"action":"remove","lines":["",""],"id":49}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":50},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":12,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":56},{"start":{"row":11,"column":21},"end":{"row":12,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""],"id":57}],[{"start":{"row":17,"column":0},"end":{"row":26,"column":18},"action":"insert","lines":["    cursor = connection.cursor(pymysql.cursors.DictCursor)","    sql = \"SELECT * FROM mode\"","    cursor.execute(sql)","    mode = []","    for r in cursor:","        mode.append({","            'id' : r['id'],","            'name': r['mname']","        })","    cursor.close()"],"id":58}],[{"start":{"row":26,"column":18},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":59},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":18,"column":25},"end":{"row":18,"column":29},"action":"remove","lines":["mode"],"id":60},{"start":{"row":18,"column":25},"end":{"row":18,"column":26},"action":"insert","lines":["c"]},{"start":{"row":18,"column":26},"end":{"row":18,"column":27},"action":"insert","lines":["u"]},{"start":{"row":18,"column":27},"end":{"row":18,"column":28},"action":"insert","lines":["r"]},{"start":{"row":18,"column":28},"end":{"row":18,"column":29},"action":"insert","lines":["r"]},{"start":{"row":18,"column":29},"end":{"row":18,"column":30},"action":"insert","lines":["e"]},{"start":{"row":18,"column":30},"end":{"row":18,"column":31},"action":"insert","lines":["n"]},{"start":{"row":18,"column":31},"end":{"row":18,"column":32},"action":"insert","lines":["t"]},{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"insert","lines":["y"]}],[{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"remove","lines":["y"],"id":61},{"start":{"row":18,"column":31},"end":{"row":18,"column":32},"action":"remove","lines":["t"]}],[{"start":{"row":18,"column":31},"end":{"row":18,"column":32},"action":"insert","lines":["c"],"id":62},{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"insert","lines":["y"]}],[{"start":{"row":24,"column":23},"end":{"row":24,"column":28},"action":"remove","lines":["mname"],"id":63},{"start":{"row":24,"column":23},"end":{"row":24,"column":24},"action":"insert","lines":["c"]},{"start":{"row":24,"column":24},"end":{"row":24,"column":25},"action":"insert","lines":["o"]},{"start":{"row":24,"column":25},"end":{"row":24,"column":26},"action":"insert","lines":["u"]},{"start":{"row":24,"column":26},"end":{"row":24,"column":27},"action":"insert","lines":["n"]},{"start":{"row":24,"column":27},"end":{"row":24,"column":28},"action":"insert","lines":["t"]},{"start":{"row":24,"column":28},"end":{"row":24,"column":29},"action":"insert","lines":["r"]},{"start":{"row":24,"column":29},"end":{"row":24,"column":30},"action":"insert","lines":["y"]}],[{"start":{"row":24,"column":16},"end":{"row":24,"column":17},"action":"remove","lines":["e"],"id":64},{"start":{"row":24,"column":15},"end":{"row":24,"column":16},"action":"remove","lines":["m"]},{"start":{"row":24,"column":14},"end":{"row":24,"column":15},"action":"remove","lines":["a"]},{"start":{"row":24,"column":13},"end":{"row":24,"column":14},"action":"remove","lines":["n"]}],[{"start":{"row":24,"column":13},"end":{"row":24,"column":14},"action":"insert","lines":["c"],"id":65},{"start":{"row":24,"column":14},"end":{"row":24,"column":15},"action":"insert","lines":["o"]},{"start":{"row":24,"column":15},"end":{"row":24,"column":16},"action":"insert","lines":["u"]},{"start":{"row":24,"column":16},"end":{"row":24,"column":17},"action":"insert","lines":["n"]},{"start":{"row":24,"column":17},"end":{"row":24,"column":18},"action":"insert","lines":["t"]},{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"insert","lines":["r"]},{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"insert","lines":["y"]}],[{"start":{"row":28,"column":39},"end":{"row":28,"column":40},"action":"insert","lines":[","],"id":66},{"start":{"row":28,"column":40},"end":{"row":28,"column":41},"action":"insert","lines":["c"]},{"start":{"row":28,"column":41},"end":{"row":28,"column":42},"action":"insert","lines":["o"]},{"start":{"row":28,"column":42},"end":{"row":28,"column":43},"action":"insert","lines":["u"]},{"start":{"row":28,"column":43},"end":{"row":28,"column":44},"action":"insert","lines":["n"]},{"start":{"row":28,"column":44},"end":{"row":28,"column":45},"action":"insert","lines":["t"]},{"start":{"row":28,"column":45},"end":{"row":28,"column":46},"action":"insert","lines":["r"]},{"start":{"row":28,"column":46},"end":{"row":28,"column":47},"action":"insert","lines":["y"]},{"start":{"row":28,"column":47},"end":{"row":28,"column":48},"action":"insert","lines":["-"]}],[{"start":{"row":28,"column":47},"end":{"row":28,"column":48},"action":"remove","lines":["-"],"id":67}],[{"start":{"row":28,"column":47},"end":{"row":28,"column":48},"action":"insert","lines":["="],"id":68},{"start":{"row":28,"column":48},"end":{"row":28,"column":49},"action":"insert","lines":["c"]},{"start":{"row":28,"column":49},"end":{"row":28,"column":50},"action":"insert","lines":["p"]},{"start":{"row":28,"column":50},"end":{"row":28,"column":51},"action":"insert","lines":["u"]},{"start":{"row":28,"column":51},"end":{"row":28,"column":52},"action":"insert","lines":["n"]}],[{"start":{"row":28,"column":51},"end":{"row":28,"column":52},"action":"remove","lines":["n"],"id":69},{"start":{"row":28,"column":50},"end":{"row":28,"column":51},"action":"remove","lines":["u"]},{"start":{"row":28,"column":49},"end":{"row":28,"column":50},"action":"remove","lines":["p"]}],[{"start":{"row":28,"column":49},"end":{"row":28,"column":50},"action":"insert","lines":["o"],"id":70},{"start":{"row":28,"column":50},"end":{"row":28,"column":51},"action":"insert","lines":["u"]},{"start":{"row":28,"column":51},"end":{"row":28,"column":52},"action":"insert","lines":["n"]},{"start":{"row":28,"column":52},"end":{"row":28,"column":53},"action":"insert","lines":["t"]},{"start":{"row":28,"column":53},"end":{"row":28,"column":54},"action":"insert","lines":["r"]},{"start":{"row":28,"column":54},"end":{"row":28,"column":55},"action":"insert","lines":["y"]}],[{"start":{"row":22,"column":11},"end":{"row":22,"column":12},"action":"remove","lines":["e"],"id":71},{"start":{"row":22,"column":10},"end":{"row":22,"column":11},"action":"remove","lines":["d"]},{"start":{"row":22,"column":9},"end":{"row":22,"column":10},"action":"remove","lines":["o"]},{"start":{"row":22,"column":8},"end":{"row":22,"column":9},"action":"remove","lines":["m"]}],[{"start":{"row":22,"column":8},"end":{"row":22,"column":9},"action":"insert","lines":["c"],"id":72},{"start":{"row":22,"column":9},"end":{"row":22,"column":10},"action":"insert","lines":["o"]},{"start":{"row":22,"column":10},"end":{"row":22,"column":11},"action":"insert","lines":["u"]},{"start":{"row":22,"column":11},"end":{"row":22,"column":12},"action":"insert","lines":["n"]},{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":["t"]},{"start":{"row":22,"column":13},"end":{"row":22,"column":14},"action":"insert","lines":["r"]},{"start":{"row":22,"column":14},"end":{"row":22,"column":15},"action":"insert","lines":["y"]}],[{"start":{"row":20,"column":4},"end":{"row":20,"column":8},"action":"remove","lines":["mode"],"id":73},{"start":{"row":20,"column":4},"end":{"row":20,"column":5},"action":"insert","lines":["c"]},{"start":{"row":20,"column":5},"end":{"row":20,"column":6},"action":"insert","lines":["o"]},{"start":{"row":20,"column":6},"end":{"row":20,"column":7},"action":"insert","lines":["u"]},{"start":{"row":20,"column":7},"end":{"row":20,"column":8},"action":"insert","lines":["n"]},{"start":{"row":20,"column":8},"end":{"row":20,"column":9},"action":"insert","lines":["t"]},{"start":{"row":20,"column":9},"end":{"row":20,"column":10},"action":"insert","lines":["y"]}],[{"start":{"row":20,"column":9},"end":{"row":20,"column":10},"action":"remove","lines":["y"],"id":74}],[{"start":{"row":20,"column":9},"end":{"row":20,"column":10},"action":"insert","lines":["r"],"id":75},{"start":{"row":20,"column":10},"end":{"row":20,"column":11},"action":"insert","lines":["y"]}],[{"start":{"row":13,"column":16},"end":{"row":13,"column":31},"action":"remove","lines":["methods=['GET']"],"id":76},{"start":{"row":13,"column":15},"end":{"row":13,"column":16},"action":"remove","lines":[" "]},{"start":{"row":13,"column":14},"end":{"row":13,"column":15},"action":"remove","lines":[","]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":23},"end":{"row":19,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":22,"state":"start","mode":"ace/mode/python"}},"timestamp":1569311090841,"hash":"7895f1394803963112879fde52b1c38783113cad"}